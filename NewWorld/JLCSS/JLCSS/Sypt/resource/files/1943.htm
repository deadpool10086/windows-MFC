<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:none" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:none"><nobr>aabb1aabb</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:none" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P>&nbsp;&nbsp;&nbsp; 在Winsock应用编程中，应用程序通过配置sockaddr结构来指定IP地址和相关端口信息，该结构常用的有三种定义，原型分别为：</P>
<P align=center><IMG src="../upload/1228273188671_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 结构相关成员解释：</P>
<P align=center>表1&nbsp; 结构相关成员解释</P>
<P align=center><IMG src="../upload/1228273199578_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 上面三中sockaddr结构分别有着不同的作用，其中sockaddr主要用于统一socket函数的地址参数形式，在实际编程过程中，IPv4下通常使用sockaddr_in结构，IPv6中通常使用sockaddr_in6结构，在传递参数时一般使用强制类型转换将其指针转换为sockaddr结构型指针。<BR>&nbsp;&nbsp;&nbsp; 在Windows XP以后系统上的winsock编程中对于地址的转换还常用到另外一种地址结构addrinfo,该结构为编写IPv4及IPv6通用网络程序提供了便利，addrinfo结构的ANSI版本和UNICODE版本如下：</P>
<P align=center><IMG src="../upload/1228273210156_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 结构相关成员解释：</P>
<P align=center>表2&nbsp; 结构相关成员解释</P>
<P align=center><IMG src="../upload/1228273232500_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 以上仅给出了较为常用的addrinfo成员的相关解释，更多参考可以查看MSDN中相关内容。<BR>&nbsp;&nbsp;&nbsp; Addrinfo结构主要用于getaddrinfo函数（该函数由于使用字符串作为参数，所以分为ANSI版本和UNICODE版本，这也是addrinfo结构分为两个版本的主要原因。），其两个版本函数如下：</P>
<P align=center><IMG src="../upload/1228273249203_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 由于getaddrinfo的两个版本函数名称与默认的Windows API命名方式有所不同，为了保持windows下函数名称的命名习惯，在头文件Ws2tcpip.h中还定义了宏GetAddrInfoA用以提供程序代码的兼容性支持。同时用户还可以使用兼容版本的GetAddrInfo函数以适应ANSI和UNICODE两个版本下的windows编程。<BR>&nbsp;&nbsp;&nbsp; 下面给给出getaddrinfo函数用法的简单示例：</P>
<P align=center><IMG src="../upload/1228273265125_pic.gif"></P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 