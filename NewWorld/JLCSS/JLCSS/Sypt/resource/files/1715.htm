<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P>十二.&nbsp;OSPFv3的工作原理<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 建立路由器的邻接关系<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 选举DR/BDR<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 发现路由器<BR>&nbsp;&nbsp;&nbsp; 4.&nbsp; 选择适当的路由器<BR>&nbsp;&nbsp;&nbsp; 5.&nbsp; 维护路由信息<BR>十三.&nbsp;OSPF链路状态通告类型<BR></P></td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>十二.&nbsp;OSPFv3的工作原理</STRONG><BR><STRONG>1.&nbsp;建立路由器的邻接关系<BR></STRONG>&nbsp;&nbsp;&nbsp; 所谓“邻接关系”是指OSPF路由器以交换路由信息为目的，在所选择的相邻路由器之间建立的一种关系。路由器首先发送拥有自身ID信息的Hello报文。与之相邻的路由器如果收到这个Hello报文，就将这个报文内的ID信息加入到自己的Hello报文内。如果路由器的某端口收到从其它路由器发送的含有自身ID信息的Hello报文，则它根据该端口所在网络类型确定是否可以建立邻接关系。<BR>在点对点网络中，路由器将直接和对端路由器建立起邻接关系，并且该路由器将直接进入到第三步操作：发现其它路由器。若为MultiAccess网络，该路由器将进入选举步骤。<BR><STRONG>2.&nbsp;选举DR/BDR</STRONG><BR>&nbsp;&nbsp;&nbsp; 不同类型的网络选举DR（指定路由器）和BDR（次级指定路由器）的方式不同。MultiAccess网络支持多个路由器，在这种状况下，OSPF需要建立起作为链路状态和LSA更新的中心节点。选举利用Hello报文内的ID和优先权（Priority）字段值来确定。优先权字段值大小从0到255，优先权值最高的路由器成为DR。如果优先权值大小一样，则ID值最高的路由器选举为DR，优先权值次高的路由器选举为BDR。优先权值和ID值都可以直接设置。<BR><STRONG>3.&nbsp;发现路由器</STRONG><BR>&nbsp;&nbsp;&nbsp; 在这个步骤中，路由器与路由器之间首先利用Hello报文的ID信息确认主从关系（Router ID大的为master，小的为servant，Seq只能由master增加），然后主从路由器相互交换部分链路状态信息。每个路由器对信息进行分析比较，如果收到的信息有新的内容，路由器将要求对方发送完整的链路状态信息。这个状态完成后，路由器之间建立完全相邻（FullAdjacency）关系，同时邻接路由器拥有自己独立的、完整的链路状态数据库。<BR><STRONG>4.&nbsp;选择适当的路由器</STRONG><BR>&nbsp;&nbsp;&nbsp; 当一个路由器拥有完整独立的链路状态数据库后，它将采用SPF算法计算并创建路由表。OSPF路由器依据链路状态数据库的内容，独立地用SPF算法计算出到每一个目的网络的路径，并将路径存入路由表中。<BR>&nbsp;&nbsp;&nbsp; OSPF利用度量（Cost）计算目的路径，Cost最小者即为最短路径。在配置OSPF路由器时可根据实际情况，如链路带宽、时延或经济上的费用设置链路Cost大小。Cost越小，则该链路被选为路由的可能性越大。<BR><STRONG>5.&nbsp;维护路由信息(
<OBJECT codeBase=http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0 classid=clsid:D27CDB6E-AE6D-11cf-96B8-444553540000><PARAM NAME="_cx" VALUE="5080"><PARAM NAME="_cy" VALUE="5080"><PARAM NAME="FlashVars" VALUE=""><PARAM NAME="Movie" VALUE="../upload/1238377921203_swf.swf"><PARAM NAME="Src" VALUE="../upload/1238377921203_swf.swf"><PARAM NAME="WMode" VALUE="Window"><PARAM NAME="Play" VALUE="-1"><PARAM NAME="Loop" VALUE="-1"><PARAM NAME="Quality" VALUE="High"><PARAM NAME="SAlign" VALUE=""><PARAM NAME="Menu" VALUE="-1"><PARAM NAME="Base" VALUE=""><PARAM NAME="AllowScriptAccess" VALUE=""><PARAM NAME="Scale" VALUE="ShowAll"><PARAM NAME="DeviceFont" VALUE="0"><PARAM NAME="EmbedMovie" VALUE="0"><PARAM NAME="BGColor" VALUE=""><PARAM NAME="SWRemote" VALUE=""><PARAM NAME="MovieData" VALUE=""><PARAM NAME="SeamlessTabbing" VALUE="1"><PARAM NAME="Profile" VALUE="0"><PARAM NAME="ProfileAddress" VALUE=""><PARAM NAME="ProfilePort" VALUE="0"><PARAM NAME="AllowNetworking" VALUE="all"><PARAM NAME="AllowFullScreen" VALUE="false">
<embed src=../upload/1238377921203_swf.swf 
pluginspage=<A>'</A>http://www.macromedia.com/go/getflashplayer<A>'</A> 
type=<A>'</A>application/x-shockwave-flash<A>'</A>  width=100% height=100%></embed></OBJECT>)<BR></STRONG>&nbsp;&nbsp;&nbsp; 当链路状态发生变化时，OSPF通过洪泛过程通告网络上其它路由器。OSPF路由器接收到包含有新信息的链路状态更新报文，将更新自己的链路状态数据库，然后用SPF算法重新计算路由表。在重新计算过程中，路由器继续使用旧路由表，直到SPF完成新的路由表计算。新的链路状态信息将发送给其它路由器。<BR><STRONG>十三.&nbsp;OSPF链路状态通告类型</STRONG><BR>&nbsp;&nbsp;&nbsp; IPv6定义了7种不同类型的LSA，每个LSA以标准的20字节LSA头开始。每个LSA描述了一段OSPF路由域，反映路由器及其链路状态。每个路由器都发起路由器LSA，网络LSA由指定路由器对每个链路通告，路由器的链路本地地址是在链路LSA里通告给邻居的。IPv6前缀是在域内前缀LSA、域间前缀LSA和AS外部LSA里通告的，特定路由器的位置可在域间路由器LSA中跨区域边界进行通告，所有LSA在整个OSPF路由域内洪泛。洪泛算法是可靠的，保证所有路由器有相同的LSA集合，该LSA集合被称为LSDB（链路状态数据库）。在LSDB中每个路由器构造了一棵以自己为根的最短路径树，这样就产生了路由表。<BR>&nbsp;&nbsp;&nbsp; 路由器LSA：在区域里的每个路由器生成一个或多个路由器LSA。路由器生成的路由器LSA的集合描述了路由器到该区域的接口的状态和费用，路由器LSA仅在单个区域内洪泛。<BR>&nbsp;&nbsp;&nbsp; 网络LSA：对于区域内的每个广播链路都生成网络LSA，该区域支持两个或多个路由器。网络LSA是由链路的指定路由器产生。LSA描述所有与该链路相连的路由器，包括指定路由器本身。LSA的链路状态ID字段设置为接口ID，指定路由器在链路上通过Hello包来通告接口ID。<BR>&nbsp;&nbsp;&nbsp; 域间前缀LSA：IPv6的OSPF中的域间前缀LSA等价于IPv4中的第三类汇总LSA。域间前缀LSA由区域边界路由器产生，描述了到其它区域的IPv6地址前缀的路由。对每个IPv6地址前缀都产生一个单独的域间前缀LSA。<BR>&nbsp;&nbsp;&nbsp; 域间路由器LSA：IPv6的OSPF中的域间路由器LSA等价于IPv4中的第四类汇总LSA。域间路由器LSA由区域边界路由器产生，描述了到其它区域的路由器的路由；每个LSA描述了到一个路由器的路由。<BR>&nbsp;&nbsp;&nbsp; AS外部LSA：这些LSA是由AS边界路由器产生，描述到达外部的目的地。每个LSA描述了到单个IPv6地址前缀的路由。<BR>&nbsp;&nbsp;&nbsp; 链路LSA：路由器对于每个与其相连的链路发起单独的链路LSA。这些LSA由本地链路的洪泛范围，它们不洪泛到与其相关的链路之外。<BR>&nbsp;&nbsp;&nbsp; 域内前缀LSA：路由器用域内前缀LSA来通告一个或多个IPv6地址前缀。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 