<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">四. SNMP管理构件<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; SNMP的作用<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; SMI的作用<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; MIB的作用<BR>五. 管理信息结构SMI<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; SMI<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 名字<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 类型<BR>&nbsp;&nbsp;&nbsp; 4.&nbsp; 编码方法</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>四. SNMP管理构件</STRONG><BR>&nbsp;&nbsp;&nbsp; 为了完成管理任务，SNMP使用另外两个协议：管理信息结构（SMI）和管理信息库（MIB）。如下图所示：</P>
<P align=center><IMG src="../upload/1223253629781_pic.gif"></P>
<P align=center>图9-3&nbsp; SNMP管理构件</P>
<P><STRONG>1.&nbsp; SNMP的作用</STRONG><BR>&nbsp;&nbsp;&nbsp; SNMP在网络管理中起着非常特殊的作用。它定义了从管理器发送到代理以及从代理发送到管理器的数据包格式。它还解释结果和产生统计。所交换的数据包包含对象（变量）名和它们的状态（值）。SNMP负责读取和改变这些数值。<BR><STRONG>2.&nbsp; SMI的作用</STRONG><BR>&nbsp;&nbsp;&nbsp; 要使用SNMP，就需要命名对象的规则和定义对象类型的规则。SMI是定义这些规则的协议。SMI只是定义了这些规则，它并没有定义在一个实体中可以管理多少个对象或哪个对象使用哪一种类型。SMI是许多通用规则的集合，这些规则用来命名对象和列出它们的类型清单。对象和类型的关联并不是SMI应当做的事。<BR><STRONG>3.&nbsp; MIB的作用</STRONG><BR>&nbsp;&nbsp;&nbsp; MIB协议定义了对象的数目，按照SMI定义的规则给这些对象命名，并且将对象和一种类型联系起来。<BR><STRONG>五. 管理信息结构SMI</STRONG><BR><STRONG>1.&nbsp; SMI</STRONG><BR>&nbsp;&nbsp;&nbsp; SMIv2（管理信息结构版本2）是用在网络管理中的一个构件。它的功能是：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 定义给对象命名的规则。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 定义可在对象中存储的数据类型。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 给出如何对网络上传输的数据进行编码的方法。<BR>&nbsp;&nbsp;&nbsp; SMI是SNMP的一个指南。它强调处理对象的3个属性：名字、数据类型和编码方法，如下图所示：</P>
<P align=center><IMG src="../upload/1223253639843_pic.gif"></P>
<P align=center>图9-4&nbsp; 对象属性</P>
<P><STRONG>2.&nbsp; 名字</STRONG><BR>&nbsp;&nbsp;&nbsp; SMI要求一个被管对象具有惟一的名字。为了在全局给对象命名，SMI使用对象标识符，它是基于树结构的分层次的标识符。如下图所示：</P>
<P align=center><IMG src="../upload/1223253647093_pic.gif"></P>
<P align=center>图9-5&nbsp; 对象标识符</P>
<P>&nbsp;&nbsp;&nbsp; 树结构从不命名的根开始。每一个对象可用点分隔开的整数序列定义。这种树结构也可以使用点分隔开的文本名字序列来定义对象。名字――点的表示方法是用户使用的。<BR>&nbsp;&nbsp;&nbsp; SNMP使用的各对象都位于mib-2对象下面的，它们的标识符永远从1.3.6.1.2.1开始。<BR><STRONG>3.&nbsp; 类型</STRONG><BR>&nbsp;&nbsp;&nbsp; 对象的第二个属性是对象中存储的数据的类型。SMI使用ASN.1（抽象语法1）的基本定义定义了数据类型，同时也增加了几个新的类型。SMI既是ASN.1的一个子集，也是ASN.1的一个超集。<BR>&nbsp;&nbsp;&nbsp; SMI使用两大数据类型：简单的和结构化的。<BR>&nbsp;&nbsp;&nbsp; （1）简单类型<BR>&nbsp;&nbsp;&nbsp; 简单数据类型是原子数据类型。这些类型中的一些是直接取自ASN.1的；另一些是SMI增加的。下表给出了一些重要的类型，前5个取自ASN.1；后7个是SMI定义的。</P>
<P align=center>表9-2&nbsp; SMI简单类型</P>
<P align=center><IMG src="../upload/1223253654890_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; （2）结构化类型<BR>&nbsp;&nbsp;&nbsp; 把简单的和结构化的数据类型组合起来，就可以构成新的结构化数据类型。SMI定义了两种结构化数据类型：sequence和sequence of。<BR>&nbsp;&nbsp;&nbsp; Sequence：sequence数据类型是一些简单数据类型的组合，但不必都是相同的类型。它和C语言中使用的struct或record的概念相似。<BR>&nbsp;&nbsp;&nbsp; Sequence of：sequence of数据类型是所有相同类型的简单数据类型的组合，或所有相同类型的sequence数据类型的组合。它和C语言中使用的array的概念相似。<BR><STRONG>4.&nbsp; 编码方法</STRONG><BR>&nbsp;&nbsp;&nbsp; SMI编码方法使用BER（基本编码规则），把数据编码后在网络上传输。BER将每一块数据编码成三元组格式：标记、长度和值，如下图所示：</P>
<P align=center><IMG src="../upload/1239606658359_pic.gif"></P>
<P align=center>图9-6&nbsp; 编码格式</P>
<P>&nbsp;&nbsp;&nbsp; （1）标记<BR>&nbsp;&nbsp;&nbsp; 标记是定义数据类型的1字节字段。它由3个子字段组成：类字段（2位）、格式字段（1位）和编号字段（5位）。类字段定义数据的作用域（scope）。共定义了4个类：通用类（00）、应用类（01）、特定上下文类（10）和专用类（11）。通用数据类型是来自ASN.1的。应用数据类型是由SMI增加的。有5种特定上下文数据类型，它们的意义随着协议的不同而不同。专用数据类型是特定厂商使用的。格式字段指出数据是简单的（0）还是结构化的（1）。编号字段将简单的或结构化的数据进一步划分为一些子组（subgroup）。例如在通用类的简单格式，INTEGER的值是2，OCTET STRING的值是4，等等。<BR>&nbsp;&nbsp;&nbsp; （2）长度<BR>&nbsp;&nbsp;&nbsp; 长度字段是1或多字节。若它是1字节，则最高位必定为0，其余的7位定义数据长度。若大于1字节，则第一字节的最高位必定为1。第一个字节的其余7位则定义所需的字节数。下图说明了长度字段的意义：</P>
<P align=center><IMG src="../upload/1223253674921_pic.gif"></P>
<P align=center>图9-7&nbsp; 长度的格式</P>
<P>&nbsp;&nbsp;&nbsp; （3）值<BR>&nbsp;&nbsp;&nbsp; 值字段按照在BER中定义的规则把数据的值进行编码。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 