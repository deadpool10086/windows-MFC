<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">八. FTP连接、通信与传送<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 连接<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 通信<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 文件传送<BR></td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>八. FTP连接、通信与传送</STRONG><BR><STRONG>1.&nbsp; 连接</STRONG><BR>&nbsp;&nbsp;&nbsp; FTP的控制连接和数据连接使用不同的方法和不同的端口号。<BR>&nbsp;&nbsp;&nbsp; （1）控制连接<BR>&nbsp;&nbsp;&nbsp; 控制连接的创建步骤如下：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 服务器在熟知端口21发出被动打开，等待客户。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 客户使用临时端口发出主动打开。<BR>&nbsp;&nbsp;&nbsp; 在整个过程中这个连接一直是打开的。这是客户和服务器的交互式连接，所以IP协议使用的服务类型是最小延迟。用户键入命令并期望收到的响应延时不太大。下图给出了服务器和客户之间的初始连接：</P>
<P align=center><IMG src="../upload/1238657322984_pic.gif"></P>
<P align=center>图14-11&nbsp; 打开控制连接</P>
<P>&nbsp;&nbsp;&nbsp; （2）FTP数据连接的两种模式<BR>&nbsp;&nbsp;&nbsp; FTP的数据连接存在两种模式：主动模式（PORT）和被动模式（PASV）。主动模式是从服务器端向客户端发起连接(
<OBJECT codeBase=http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0 classid=clsid:D27CDB6E-AE6D-11cf-96B8-444553540000><PARAM NAME="_cx" VALUE="5080"><PARAM NAME="_cy" VALUE="5080"><PARAM NAME="FlashVars" VALUE=""><PARAM NAME="Movie" VALUE="../upload/1238377246609_swf.swf"><PARAM NAME="Src" VALUE="../upload/1238377246609_swf.swf"><PARAM NAME="WMode" VALUE="Window"><PARAM NAME="Play" VALUE="-1"><PARAM NAME="Loop" VALUE="-1"><PARAM NAME="Quality" VALUE="High"><PARAM NAME="SAlign" VALUE=""><PARAM NAME="Menu" VALUE="-1"><PARAM NAME="Base" VALUE=""><PARAM NAME="AllowScriptAccess" VALUE=""><PARAM NAME="Scale" VALUE="ShowAll"><PARAM NAME="DeviceFont" VALUE="0"><PARAM NAME="EmbedMovie" VALUE="0"><PARAM NAME="BGColor" VALUE=""><PARAM NAME="SWRemote" VALUE=""><PARAM NAME="MovieData" VALUE=""><PARAM NAME="SeamlessTabbing" VALUE="1"><PARAM NAME="Profile" VALUE="0"><PARAM NAME="ProfileAddress" VALUE=""><PARAM NAME="ProfilePort" VALUE="0"><PARAM NAME="AllowNetworking" VALUE="all"><PARAM NAME="AllowFullScreen" VALUE="false">
<embed src=../upload/1238377246609_swf.swf 
pluginspage=<A>'</A>http://www.macromedia.com/go/getflashplayer<A>'</A> 
type=<A>'</A>application/x-shockwave-flash<A>'</A>  width=100% height=100%></embed></OBJECT>)；被动模式是客户端向服务器端发起连接(
<OBJECT codeBase=http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0 classid=clsid:D27CDB6E-AE6D-11cf-96B8-444553540000><PARAM NAME="_cx" VALUE="5080"><PARAM NAME="_cy" VALUE="5080"><PARAM NAME="FlashVars" VALUE=""><PARAM NAME="Movie" VALUE="../upload/1238377278640_swf.swf"><PARAM NAME="Src" VALUE="../upload/1238377278640_swf.swf"><PARAM NAME="WMode" VALUE="Window"><PARAM NAME="Play" VALUE="-1"><PARAM NAME="Loop" VALUE="-1"><PARAM NAME="Quality" VALUE="High"><PARAM NAME="SAlign" VALUE=""><PARAM NAME="Menu" VALUE="-1"><PARAM NAME="Base" VALUE=""><PARAM NAME="AllowScriptAccess" VALUE=""><PARAM NAME="Scale" VALUE="ShowAll"><PARAM NAME="DeviceFont" VALUE="0"><PARAM NAME="EmbedMovie" VALUE="0"><PARAM NAME="BGColor" VALUE=""><PARAM NAME="SWRemote" VALUE=""><PARAM NAME="MovieData" VALUE=""><PARAM NAME="SeamlessTabbing" VALUE="1"><PARAM NAME="Profile" VALUE="0"><PARAM NAME="ProfileAddress" VALUE=""><PARAM NAME="ProfilePort" VALUE="0"><PARAM NAME="AllowNetworking" VALUE="all"><PARAM NAME="AllowFullScreen" VALUE="false">
<embed src=../upload/1238377278640_swf.swf 
pluginspage=<A>'</A>http://www.macromedia.com/go/getflashplayer<A>'</A> 
type=<A>'</A>application/x-shockwave-flash<A>'</A>  width=100% height=100%></embed></OBJECT>)。<BR>&nbsp;&nbsp;&nbsp; 当FTP被设置为主动模式时，它的连接过程如下：首先客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条控制连接。当需要传输数据时，客户端在控制连接上用PORT命令告诉服务器：“我打开了XXXX端口，你来连接我”。于是服务器从20端口向客户端的XXXX端口发送连接请求，最后建立一条数据连接来传输数据。</P>
<P align=center><IMG src="../upload/1223256680937_pic.gif"></P>
<P align=center>图14-12&nbsp; FTP的主动模式</P>
<P>&nbsp;&nbsp;&nbsp; 当FTP被设置为被动模式时，它的连接过程如下：首先客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条控制连接。当需要传输数据时，服务器在命令链路上用PASV命令告诉客户端：“我打开了XXXX端口，你来连接我”。于是客户端向服务器的XXXX端口发送连接请求，最后建立一条数据连接来传输数据。</P>
<P align=center><IMG src="../upload/1223256690140_pic.gif"></P>
<P align=center>图14-13&nbsp; FTP的被动模式</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp; 当进行FTP连接时，Internet Explore通常被设置为被动模式，而FTP客户端软件（如：FlashFXP、CutFTP）一般为主动模式。如果服务器和客户端之间存在防火墙，主动模式经常会引起一些麻烦。例如：客户端位于防火墙之后，通常防火墙允许所有内部向外部的连接通过，但是对于外部向内部发起的连接却存在很多限制。在这种情况下，客户可以正常地和服务器建立控制连接，而如果使用主动模式的数据连接，一些数据传输命令就很难成功运行，因为防火墙会阻塞从服务器向客户端发起的数据传输连接。因此在使用主动模式的FTP数据连接时，防火墙上的配置会比较麻烦。<BR><STRONG>2.&nbsp; 通信</STRONG><BR>&nbsp;&nbsp;&nbsp; （1）在控制连接上的通信<BR>&nbsp;&nbsp;&nbsp; FTP使用NVT ASCII字符集在控制连接上通信，如下图所示。通信过程使用命令和响应来完成。命令和响应都是一个短行，因此不必考虑它的文件结构。每一行以回车和换行组成的结束记号结束。</P>
<P align=center><IMG src="../upload/1238657347140_pic.gif"></P>
<P align=center>图14-14&nbsp; 使用控制连接</P>
<P>&nbsp;&nbsp;&nbsp; （2）在数据连接上的通信<BR>&nbsp;&nbsp;&nbsp; 数据连接用来传送数据，在传送数据之前，客户需要使用控制连接来做传输的准备。客户需要定义要传送的文件类型、数据结构以及传输方式。如下图所示：</P>
<P align=center><IMG src="../upload/1238657359984_pic.gif"></P>
<P align=center>图14-15&nbsp; 使用数据连接</P>
<P>&nbsp;&nbsp;&nbsp; ①&nbsp; 文件类型<BR>&nbsp;&nbsp;&nbsp; FTP能够在数据连接上传送下列文件类型中的一种：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; ASCII文件：这是传送文本文件的默认格式。每一个字符使用NVT ASCII进行编码。发送端把文件从它自己的表示转换成NVT ASCII字符，而接收端从NVT ASCII字符转换成它自己的字符。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; EBCDIC文件：若连接的一端或两端使用EBCDIC编码，则可使用EBCDIC编码传送文件。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 图像文件：这是传送二进制文件的默认格式。这种文件是作为连续的位流传送而没有任何解释或编码。在大多数情况下它用来传送二进制文件，如已编译的程序。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 数据结构<BR>&nbsp;&nbsp;&nbsp; 在数据连接上传送文件时，FTP可以使用下列数据结构中的一种：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 文件结构（默认）：这种文件没有结构。它是连续的字节流。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 记录结构：这种文件划分为一些记录，这只能用于文本文件。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 页面结构：这种文件划分为一些页面，每一个页面有页面号和页面首部。页面可以随机地或顺序地进行存取。<BR>&nbsp;&nbsp;&nbsp; （3）传输方式<BR>&nbsp;&nbsp;&nbsp; FTP可以使用下列传输方式之一在数据连接上传送文件：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 流方式：这是默认方式。数据作为连续的字节流从FTP交付给TCP。TCP负责把数据划分为适当大小的报文。若数据是简单的字节流（文件结构），就不需要文件结束符。若数据划分为记录（记录结构），则每一个记录有1字节的记录结束（EOR）字符，而在文件的结束处有文件结束（EOF）字符。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 块方式：数据可以按块从FTP交付给TCP。每一个块的前面有3字节首部。第一个字节叫做块描述符，后两个字节定义块的大小，以字节为单位。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 压缩方式：若文件很大，数据可进行压缩。通常使用的压缩方法是游程长度编码。数据单元的连续出现数可以用一个“出现”和“重复数”来替换。在文本文件中，这通常是空格。在二进制文件中，空字符常常被压缩。<BR><STRONG>3.&nbsp; 文件传送</STRONG><BR>&nbsp;&nbsp;&nbsp; 在控制连接命令的控制下，在数据连接上进行文件传送，如下图所示：</P>
<P align=center><IMG src="../upload/1238657371156_pic.gif"></P>
<P align=center>图14-16&nbsp; 文件传送</P>
<P>&nbsp;&nbsp;&nbsp; FTP的文件传送有三种动作：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 从服务器把文件复制到客户端叫做读取文件。读取文件是在RETR命令的监督下完成的。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 从客户端把文件复制到服务器叫做存储文件。存储文件是在STOR命令的监督下完成的。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 从服务器向客户端发送目录列表或文件名。这是在LIST命令的监督下完成的。FTP把目录或文件名列表当作文件，在数据连接上发送。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 