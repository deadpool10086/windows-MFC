<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">一. 体系结构<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 客户（浏览器）<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 服务器<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 统一资源定位符（URL）<BR>二. 万维网文档<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 静态文档<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 动态文档<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 活动文档</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>一. 体系结构</STRONG><BR>&nbsp;&nbsp;&nbsp; 万维网（WWW）服务是分布式的客户/服务器服务，客户使用浏览器能够得到服务器提供的服务，这种服务的提供是分布在许多网站中的，如下图所示：</P>
<P align=center><IMG src="../upload/1223255096281_pic.gif"></P>
<P align=center>图13-1&nbsp; 分布式的服务</P>
<P align=left>&nbsp;&nbsp;&nbsp; 每一个网站保存有一个或多个文档，叫做万维网页面。在图12-1所示的例子中，客户需要查看网站A的某些信息。浏览器用来读取万维网上的文档。它向网站A发送一个请求，这个请求包含了网站A和网站中万维网页面的地址，这个地址叫做统一资源定位符（URL）。网站A收到请求后，将指定的文档发送给这个客户。它用同样的方法与网站B通信。</P>
<P align=left><STRONG>1.&nbsp; 客户（浏览器）</STRONG><BR>&nbsp;&nbsp;&nbsp; 许多厂商提供商用浏览器，可以解释和显示万维网页面。每一个浏览器通常由3个部分组成：控制程序、客户程序及解释程序。控制程序从键盘或鼠标接收输入，使用客户程序访问要浏览的文档。在文档找到后，控制程序就使用解释程序（可以是HTML、Java或JavaScript等）中的一个，把文档显示在屏幕上。<BR><STRONG>2.&nbsp; 服务器<BR></STRONG>&nbsp;&nbsp;&nbsp; 万维网页面存储在服务器上。每当有客户请求到达时，对应的文档就发送给客户。为了提高效率，服务器通常在其高速缓存中存储被请求过的文档；对高速缓存进行访问要比磁盘快得多。通过多线程或多进程可使服务器的效率更加提高，服务器在同一时间可回答多个请求。<BR><STRONG>3.&nbsp; 统一资源定位符（URL）</STRONG><BR>&nbsp;&nbsp;&nbsp; 客户要访问万维网页面就需要这个页面地址。为了方便地访问文档，HTTP协议使用统一资源定位符（URL）。URL是Internet上指定信息的标准。URL由4部分组成：协议、主机、端口和路径，如下图所示：</P>
<P align=center><IMG src="../upload/1223255110187_pic.gif"></P>
<P align=center>图13-2&nbsp; URL</P>
<P align=left>&nbsp;&nbsp;&nbsp; <SPAN lang=EN-US style="FONT-SIZE: 10.5pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt; mso-bidi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ascii-font-family: <A>'</A>Times New Roman<A>'</A>; mso-hansi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Wingdings"><SPAN style="mso-char-type: symbol; mso-symbol-font-family: Wingdings">l</SPAN></SPAN> 协议：协议指定了用这个URL的客户/服务器程序。例如，HTTP协议、FTP协议和TELNET协议等。<BR>&nbsp;&nbsp;&nbsp; <SPAN lang=EN-US style="FONT-SIZE: 10.5pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt; mso-bidi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ascii-font-family: <A>'</A>Times New Roman<A>'</A>; mso-hansi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Wingdings"><SPAN style="mso-char-type: symbol; mso-symbol-font-family: Wingdings">l</SPAN></SPAN>&nbsp; 主机：主机指明了信息所存放的地址，可以是逻辑地址也可以是相应的域名。存放万维网页面的计算机通常使用以字符“WWW”开始的域名，但这不是强制性的。<BR>&nbsp;&nbsp;&nbsp; <SPAN lang=EN-US style="FONT-SIZE: 10.5pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt; mso-bidi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ascii-font-family: <A>'</A>Times New Roman<A>'</A>; mso-hansi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Wingdings"><SPAN style="mso-char-type: symbol; mso-symbol-font-family: Wingdings">l</SPAN></SPAN>&nbsp; 端口：端口指定了使用主机的某个端口，端口是可选的。如果包含了端口，那么端口就插入在主机和路径之间，和主机用冒号分隔开。<BR>&nbsp;&nbsp;&nbsp; <SPAN lang=EN-US style="FONT-SIZE: 10.5pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt; mso-bidi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ascii-font-family: <A>'</A>Times New Roman<A>'</A>; mso-hansi-font-family: <A>'</A>Times New Roman<A>'</A>; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Wingdings"><SPAN style="mso-char-type: symbol; mso-symbol-font-family: Wingdings">l</SPAN></SPAN>&nbsp; 路径：路径指定了文件存放的位置。路径本身可以包含斜线，用于将目录与子目录和文件分隔开。<BR><STRONG>二. 万维网文档<BR></STRONG>&nbsp;&nbsp; 万维网文档可分为3类：静态文档、动态文档和活动文档。这种分类是基于文档内容被确定的时间。<BR><STRONG>1.&nbsp; 静态文档<BR></STRONG>&nbsp;&nbsp;&nbsp; 静态文档是固定内容的文档，它由服务器创建，并存储在服务器中。客户只能得到文档的一个副本。换言之，文件的内容是在文件被创建时就确定的，而不是在它被使用时。当然，在服务器中的内容是可以改变的，但用户不能改变它。当客户访问文档时，文档的一个副本就被发送出去。用户可以使用浏览程序显示这个文档，如下图所示：</P>
<P align=center><IMG src="../upload/1223255118703_pic.gif"></P>
<P align=center>图13-3&nbsp; 静态文档</P>
<P align=left><STRONG>2.&nbsp; 动态文档</STRONG><BR>&nbsp;&nbsp;&nbsp; 动态文档是在浏览器请求该文档时才由万维网服务器创建出来。当请求到达时，万维网服务器就运行创建动态文档的应用程序。服务器返回这个程序或脚本的输出，把它作为对请求该文档的浏览器的响应。因为对每一个请求都创建出新的文档，因此每一个请求得到的动态文档的内容就会不同。<BR><STRONG>3.&nbsp; 活动文档</STRONG><BR>&nbsp;&nbsp;&nbsp; 对于许多应用，需要程序能够在客户端运行，这就叫做活动文档。当浏览器请求活动文档时，服务器就发送这个文档的一个副本或脚本。然后这个文档就在客户（浏览器）端运行。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 