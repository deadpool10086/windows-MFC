<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">六. 流量控制<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 滑动窗口协议<BR>七. 差错控制<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 校验和<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 确认<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 重传</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>六. 流量控制</STRONG><BR>&nbsp;&nbsp;&nbsp; 在发送端收到接收端的确认报文之前，流量控制可以对发送端发送的数据量进行管理。<BR>&nbsp;&nbsp;&nbsp; 在不考虑流量控制的情况下，传输层协议可以每次只发送一个字节的数据，然后在发送下一个字节数据之前等待接收端的确认报文。这是一个非常缓慢的过程，如果数据要走很长的距离，发送端就要在等待确认报文时一直处在空闲状态。还有一种情况是传输层协议一次就将全部数据发送出去，而不理会确认报文。这样虽然加速了发送过程，但可能会使接收端来不及接收而瘫痪。此外，若有一部分数据丢失、重复、失序或损坏，发送端就要一直等到接收端将全部数据都检查完毕后才能知道。<BR>&nbsp;&nbsp;&nbsp; TCP的流量控制采用一种折中的方法。它在缓存上定义一个窗口。缓存是用来暂时存放将要发送的数据的。TCP发送数据的多少由这个窗口决定。</P>
<P align=center><IMG src="../upload/1223624620156_pic.gif"></P>
<P align=center>图7-7&nbsp; 半关闭</P>
<P><STRONG>1.&nbsp; 滑动窗口协议(
<OBJECT codeBase=http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0 classid=clsid:D27CDB6E-AE6D-11cf-96B8-444553540000><PARAM NAME="_cx" VALUE="5080"><PARAM NAME="_cy" VALUE="5080"><PARAM NAME="FlashVars" VALUE=""><PARAM NAME="Movie" VALUE="../upload/1235193343093_swf.swf"><PARAM NAME="Src" VALUE="../upload/1235193343093_swf.swf"><PARAM NAME="WMode" VALUE="Window"><PARAM NAME="Play" VALUE="-1"><PARAM NAME="Loop" VALUE="-1"><PARAM NAME="Quality" VALUE="High"><PARAM NAME="SAlign" VALUE=""><PARAM NAME="Menu" VALUE="-1"><PARAM NAME="Base" VALUE=""><PARAM NAME="AllowScriptAccess" VALUE=""><PARAM NAME="Scale" VALUE="ShowAll"><PARAM NAME="DeviceFont" VALUE="0"><PARAM NAME="EmbedMovie" VALUE="0"><PARAM NAME="BGColor" VALUE=""><PARAM NAME="SWRemote" VALUE=""><PARAM NAME="MovieData" VALUE=""><PARAM NAME="SeamlessTabbing" VALUE="1"><PARAM NAME="Profile" VALUE="0"><PARAM NAME="ProfileAddress" VALUE=""><PARAM NAME="ProfilePort" VALUE="0"><PARAM NAME="AllowNetworking" VALUE="all"><PARAM NAME="AllowFullScreen" VALUE="false">
<embed src=../upload/1235193343093_swf.swf 
pluginspage=<A>'</A>http://www.macromedia.com/go/getflashplayer<A>'</A> 
type=<A>'</A>application/x-shockwave-flash<A>'</A>  width=100% height=100%></embed></OBJECT>)</STRONG><BR>&nbsp;&nbsp;&nbsp; 为了完成流量控制，TCP使用滑动窗口协议。窗口覆盖了缓存的一部分，在这个窗口中的数据是可以发送而不必考虑确认的。窗口有两个沿：一个在左边，另一个在右边。因为左沿和右沿都是可以滑动的，所以这个窗口叫做滑动窗口。如下图所示：</P>
<P align=center><IMG src="../upload/1223253157171_pic.gif"></P>
<P align=center>图7-8&nbsp; 滑动窗口</P>
<P>&nbsp;&nbsp;&nbsp; 窗口有三种动作：展开、合拢或缩回。这三种动作受接收端的控制而不是发送端的控制。<BR>&nbsp;&nbsp;&nbsp; 展开窗口表示窗口的右沿向右移动，这样就可以从缓存中发送更多的数据。合拢窗口表示窗口的左沿向右移动，这表示某些数据已经被确认了，发送端可以不再担心它们。缩回窗口表示窗口的右沿向左移动，这在某些实现中是不允许的，因为这会使某些可以发送的数据变成不能发送的。如果发送端已经发送了这些字节，就会产生错误。窗口的左沿不能向左移动，因为这表示已经发送出去的并且经过确认的数据现在又要收回了。<BR>&nbsp;&nbsp;&nbsp; 窗口大小由接收窗口和拥塞窗口两者中的较小者决定。接收窗口大小由接收方发送的确认报文中的窗口大小字段值所确定。这是接收端在缓存溢出导致数据被丢弃之前所能接受的最大字节数。拥塞窗口大小是由网络根据拥塞情况而确定的。<BR><STRONG>七. 差错控制</STRONG><BR>&nbsp;&nbsp;&nbsp; TCP是可靠的传输层协议。应用程序把数据流交付给TCP后，就依靠TCP把整个数据流交付给接收端的应用程序，并且保证数据流是按序的、没有差错的、也没有任何一部分是丢失的或重复的。<BR>&nbsp;&nbsp;&nbsp; TCP使用差错控制提供可靠性。差错控制包括以下的一些机制：检测受到损伤的报文、丢失的报文、失序的报文和重复的报文。差错控制还包括检测出差错后纠正差错的机制。TCP的差错检测和差错纠正是通过校验和、确认以及超时重传三种机制实现的。<BR><STRONG>1.&nbsp; 校验和</STRONG><BR>&nbsp;&nbsp;&nbsp; 每一个TCP报文都包括校验和字段，用来检查报文是否损坏。若报文损坏，接收端就将报文丢弃，并认为这个报文丢失了。<BR><STRONG>2.&nbsp; 确认</STRONG><BR>&nbsp;&nbsp;&nbsp; TCP采用确认报文的方法来证实收到了数据报文。确认报文不携带数据，但消耗一个序号。除了ACK报文之外，确认报文也需要被确认。<BR><STRONG>3.&nbsp; 重传</STRONG><BR>&nbsp;&nbsp;&nbsp; 差错控制的核心是报文的重传机制。当一个报文损坏、丢失或延迟时，就需要重传这个报文。有两种情况需要对报文进行重传：当重传超时计时器时间到期时，或当发送端收到了3个重复的确认报文时。<BR>&nbsp;&nbsp;&nbsp; （1）重传超时计时器到期之后的重传<BR>&nbsp;&nbsp;&nbsp; 发送端为每一个TCP报文都设置一个重传超时计时器。若计时器时间到期时还没有收到对这个报文的确认报文，就认为这个报文丢失了，于是重传这个报文，即使可能由于报文延迟到达，或确认报文延迟到达，或确认报文丢失等原因。重传超时计时器的值是动态的，它根据报文的往返时间而更新。报文的往返时间是报文离开发送端到发送端收到此报文的确认报文所需的时间。<BR>&nbsp;&nbsp;&nbsp; （2）三个重复的确认报文之后的重传<BR>&nbsp;&nbsp;&nbsp; 一个报文的丢失会导致接收端收到的报文失序，这时接收端会发送对丢失报文的确认报文，当发送端收到3个重复的确认报文之后，发送端立即重传这个报文，这叫做快重传。<BR>&nbsp;&nbsp;&nbsp; 对不消耗序号的报文不进行重传。对所有ACK报文都不进行重传。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 