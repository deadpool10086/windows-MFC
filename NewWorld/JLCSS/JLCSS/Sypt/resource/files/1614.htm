<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P>一.&nbsp;共存与移植<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 节点的类型<BR>&nbsp;&nbsp;&nbsp; 2. &nbsp;兼容的地址</P></td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><STRONG>一.&nbsp;共存与移植</STRONG><BR>&nbsp;&nbsp;&nbsp; 通常，协议的过渡是很不容易的，从IPv4向IPv6的过渡也不例外。协议的过渡一般需要在网络中所有节点上安装和配置新的协议，并且检验是否所有主机和路由器都能正确运行。尽管这在一个小型或中型机构中可能很容易做到，但是在一个大型的机构中，要想很快地完成协议的过渡，现在确实还是一个难度很大的挑战。另外，当范围扩大到整个Internet时，整个环境中协议的快速过渡就变成是一个几乎不可能完成的任务了。<BR>&nbsp;&nbsp;&nbsp; IPv6协议的设计者们认识到从IPv4向IPv6的过渡将花费数年的时间，并且将会有一些机构或节点继续使用IPv4协议。因此，尽管最终的长远目标是移植，但是也考虑到IPv4节点和IPv6节点共存这一中间阶段。<BR>&nbsp;&nbsp;&nbsp; IPv6协议的设计者们在最初的“IP下一代协议建议”规范（RFC1752）中，定义了以下的过渡原则：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 现有的IPv4主机可以在任何时候升级，它本身的升级与其它主机和路由器的升级无关；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 仅使用IPv6协议的新主机可以在任何时候加入到网络中，并且不依赖于其它主机或路由结构；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 现有的安装了IPv6协议的IPv4主机可以继续使用它们的IPv4地址，而并不需要其它的地址；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 将现有的IPv4节点升级到IPv6，或者部署新的IPv6节点，都只需要很少的准备。<BR>&nbsp;&nbsp;&nbsp; 由于IPv4协议和IPv6协议之间不具有相关性，因此IPv4和IPv6路由结构之间需要有一系列的机制来支持二者无缝地共存。<BR><STRONG>1.&nbsp;节点的类型<BR></STRONG>&nbsp;&nbsp;&nbsp; RFC2893中定义了以下类型的节点：<BR>&nbsp;&nbsp;&nbsp; （1）&nbsp;IPv4-only节点：<BR>&nbsp;&nbsp;&nbsp; IPv4-only节点仅实现了IPv4协议（并且只有IPv4地址）。这种节点不支持IPv6。当前的大多数主机和路由器都是IPv4-only节点。<BR>&nbsp;&nbsp;&nbsp; （2）&nbsp;IPv6-only节点：<BR>&nbsp;&nbsp;&nbsp; IPv6-only节点仅实现了IPv6协议（并且只有IPv6地址）。它只能与IPv6节点和应用程序通信。尽管这类节点当前并不普遍，但是当小型设备（例如，手机和掌上电脑等）实现了IPv6协议栈时，这种节点将变得更为普及。<BR>&nbsp;&nbsp;&nbsp; （3）&nbsp;IPv6/IPv4节点：<BR>&nbsp;&nbsp;&nbsp; 这种节点既实现了IPv4协议，又实现了IPv6协议。当节点配置了IPv6接口后，就支持IPv6了。<BR>&nbsp;&nbsp;&nbsp; （4）&nbsp;IPv4节点：<BR>&nbsp;&nbsp;&nbsp; IPv4节点实现了IPv4协议（它可以发送和接收IPv6数据包）。它可以是一个仅支持IPv4的节点，也可以是一个IPv6/IPv4节点。<BR>&nbsp;&nbsp;&nbsp; （5）&nbsp;IPv6节点：<BR>&nbsp;&nbsp;&nbsp; IPv6节点实现了IPv6协议（它可以发送和接收IPv6数据包）。它可以是一个支持IPv6的节点，也可以是一个IPv6/IPv4节点。<BR>&nbsp;&nbsp;&nbsp; 在共存的条件下，可以支持最大数量的节点（IPv4或IPv6节点）相互通信，它们的通信可以在IPv4的网络结构中，也可以在IPv6的网络结构中，还可以在IPv4和IPv6混合网络结构中进行。真正的移植是在所有的IPv4节点都转化为IPv6-only节点后实现的。然而，对于可以预见的未来，实际的移植却是在尽可能多的IPv4-only节点都转化为IPv6/IPv4节点后实现的。只有在使用了IPv4到IPv6的代理，或者使用了能进行协议转换的网关时，IPv4-only节点才可以和IPv6-only节点进行通信。<BR><STRONG>2.&nbsp;兼容的地址</STRONG><BR>&nbsp;&nbsp;&nbsp; 正如实验一中所介绍的那样，目前定义了以下地址来支持IPv4和IPv6节点共存<BR>&nbsp;&nbsp;&nbsp; （1）&nbsp;IPv4兼容地址：<BR>&nbsp;&nbsp;&nbsp; IPv4兼容地址，0:0:0:0:0:0:w.x.y.z或::w.x.y.z（这里的w.x.y.z是公共IPv4地址的点缀十进制表示），用于IPv6/IPv4节点，它使IPv6/IPv4节点可以通过IPv4网络与IPv6节点进行通信。如果IPv6通信流的目的地址是IPv4兼容地址，则IPv6通信流会被IPv4报头自动封装，并通过IPv4网络发送到目标节点。Windows XP和Windows.NET Server 2003系列的IPv6协议支持使用IPv4兼容地址，但是在默认情况下并不自动配置它们。<BR>&nbsp;&nbsp;&nbsp; （2）&nbsp;IPv4映射地址：<BR>&nbsp;&nbsp;&nbsp; IPv4映射地址，0:0:0:0:0:0:FFFF:w.x.y.z或::FFFF:w.x.y.z，用于将一个IPv4-only节点表示为一个IPv6节点，它仅用于内部表示。IPv4映射地址从不用作IPv6数据包的源地址或目的地址。IPv4映射地址用于一些在IPv4-only节点和IPv6-only节点间进行协议转换的协议转换器的实现方案中。<BR>&nbsp;&nbsp;&nbsp; （3）&nbsp;6over4地址：<BR>&nbsp;&nbsp;&nbsp; 6over4地址由一个有效的64位单播地址前缀和接口标识符::WWXX:YYZZ所组成（这里WWXX:YYZZ是接口的单播IPv4地址w.x.y.z的冒号十六进制表示）。例如，一个基于IPv4地址131.107.4.92的链路本地6over4地址为FE80::836B:45C。当使用RFC2529中定义的自动隧道机制时，系统会将6over4地址分配给一个连接到支持多播IPv4网络结构中的IPv6节点。<BR>&nbsp;&nbsp;&nbsp; （4）&nbsp;6to4地址：<BR>&nbsp;&nbsp;&nbsp; 6to4地址基于前缀2002:WWXX:YYZZ::/48（这里的WWXX:YYZZ是公共IPv4地址w.x.y.z的冒号十六进制表示）。当使用RFC3056中定义的自动隧道机制时，6to4地址前缀用于创建站点的全球地址前缀，以及站点中的IPv6节点的全球地址。<BR>&nbsp;&nbsp;&nbsp; （5）&nbsp;ISATAP地址：<BR>&nbsp;&nbsp;&nbsp; ISATAP地址由一个有效的64位IPv4单播地址前缀和接口标识符::5EFE:w.x.y.z所组成（这里的w.x.y.z是一个接口的单播IPv4地址）。例如：一个链路本地ISATAP地址为FE80::5EFE:131.107.4.29。当使用题为“站间自动隧道寻址协议（ISATAP）”的Internet草案中定义的自动隧道机制时，系统会将使用ISATAP接口标识符的地址分配给IPv6/IPv4节点。</td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 