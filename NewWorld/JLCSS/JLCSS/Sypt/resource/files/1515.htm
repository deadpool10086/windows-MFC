<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>练习名称</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">分析SPF的计算过程</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>练习内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P>&nbsp;&nbsp;&nbsp; 各主机打开协议分析器，进入相应的网络结构并验证网络拓扑的正确性，如果通过拓扑验证，关闭协议分析器继续进行实验，如果没有通过拓扑验证，请检查网络连接。<BR>&nbsp;&nbsp;&nbsp; 本练习将主机A、B、C、D、E、F作为一组进行实验。<BR>1.&nbsp; 主机B、D、E启动OSPF协议并添加新接口：<BR>&nbsp;&nbsp;&nbsp; （1）主机B启动OSPF协议（在命令行方式下，输入“ospf_config routerid 1.1.1.1”）。<BR>&nbsp;&nbsp;&nbsp; （2）主机D启动OSPF协议（在命令行方式下，输入“ospf_config routerid 2.2.2.2”）。<BR>&nbsp;&nbsp;&nbsp; （3）主机E启动OSPF协议（在命令行方式下，输入“ospf_config routerid 3.3.3.3”）。<BR>&nbsp;&nbsp;&nbsp; （4）添加主机B的接口：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 添加IP为172.16.0.1的接口：在命令行方式下输入<BR>“ospf_config&nbsp;interface "172.16.0.1的接口名" 0.0.0.0 172.16.0.1 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 添加IP为192.168.0.1的接口：在命令行方式下输入<BR>“ospf_config interface "192.168.0.1的接口名" 0.0.0.0 192.168.0.1 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; （5）添加主机D的接口：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 添加IP为192.168.0.2的接口：在命令行方式下输入<BR>“ospf_config interface "192.168.0.2的接口名" 0.0.0.0 192.168.0.2 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 添加IP为172.16.1.2的接口：在命令行方式下输入<BR>“ospf_config interface "172.16.1.2的接口名" 0.0.0.0 172.16.1.2 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; （6）添加主机E的接口：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 添加IP为172.16.1.3的接口：在命令行方式下输入<BR>“ospf_config interface "172.16.1.3的接口名" 0.0.0.0 172.16.1.3 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 添加IP为172.16.0.3的接口：在命令行方式下输入<BR>“ospf_config interface "172.16.0.3的接口名" 0.0.0.0 172.16.0.3 255.255.255.0”。<BR>&nbsp;&nbsp;&nbsp; （7）设置主机B接口的权值：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 设置IP为172.16.0.1接口的权值为100：在命令行方式下输入<BR>“netsh routing ip ospf set int "172.16.0.1的接口名"&nbsp; metric=100”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 设置IP为192.168.0.1接口的权值为500：在命令行方式下输入<BR>“netsh routing ip ospf set int "192.168.0.1的接口名" &nbsp;metric=500”。<BR>&nbsp;&nbsp;&nbsp; （8）设置主机D接口的权值：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 设置IP为192.168.0.2接口的权值为500：在命令行方式下输入<BR>“netsh routing ip ospf set int "192.168.0.2的接口名" &nbsp;metric=500”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 设置IP为172.16.1.2接口的权值为200：在命令行方式下输入<BR>“netsh routing ip ospf set int "172.16.1.2的接口名" metric=200”。<BR>&nbsp;&nbsp;&nbsp; （9）设置主机E接口的权值：<BR>&nbsp;&nbsp;&nbsp; ①&nbsp; 设置IP为172.16.1.3接口的权值为200：在命令行方式下输入<BR>“netsh routing ip ospf set int "172.16.1.3的接口名" metric=200”。<BR>&nbsp;&nbsp;&nbsp; ②&nbsp; 设置IP为172.16.0.3接口的权值为100：在命令行方式下输入<BR>“netsh routing ip ospf set int "172.16.0.3的接口名" metric=100”。<BR>2.&nbsp; 用ping命令检测各路由器的连通性，如果能够达到全网互通，说明OSPF已经完成了SPF最短路径树的计算。<BR>3.&nbsp; SPF的计算过程分析-带权有向图的生成：<BR>&nbsp;&nbsp;&nbsp; 这里以主机B（路由器1）为例利用邻居关系列表和接口权值来生成一张带权有向图。<BR>&nbsp;&nbsp;&nbsp; 首先在主机B上察看LSDB（在命令行方式下，输入“ospf_config showlsdb”），如下图所示：</P>
<P align=center><IMG src="../upload/1223258254546_pic.gif"></P>
<P align=center>图19-3&nbsp; LSDB</P>
<P>&nbsp;&nbsp;&nbsp; 由上表可知区域0.0.0.0内包含三个路由器（1.1.1.1，2.2.2.2，3.3.3.3），并划分三个子网（172.16.0.0/24，172.16.1.0/24，192.168.0.0/24）。<BR>&nbsp;&nbsp;&nbsp; 分别在主机B、D、E上察看邻居关系列表（在命令行方式下，输入“ospf_config showneighbor”）。<BR>&nbsp;&nbsp;&nbsp; 主机B的邻居关系列表的内容如下：</P>
<P align=center><IMG src="../upload/1223258285625_pic.gif"></P>
<P align=center>图19-4&nbsp; 邻居关系列表</P>
<P>&nbsp;&nbsp;&nbsp; 主机D的邻居关系列表的内容如下：</P>
<P align=center><IMG src="../upload/1223258351734_pic.gif"></P>
<P align=center>图19-5&nbsp; 邻居关系列表</P>
<P>&nbsp;&nbsp;&nbsp; 主机E的邻居关系列表的内容如下：</P>
<P align=center><IMG src="../upload/1223258412843_pic.gif"></P>
<P align=center>图19-6&nbsp; 邻居关系列表</P>
<P>&nbsp;&nbsp;&nbsp; 由上面的信息可绘制出三个路由器间的关系图，如下所示：</P>
<P align=center><IMG src="../upload/1224117688906_pic.gif"></P>
<P align=center>图19-7&nbsp; 三个路由器间的关系图</P>
<P>&nbsp;&nbsp;&nbsp; 分别在主机B、D、E上察看接口信息中的COST值（在命令行方式下，输入“netsh routing ip ospf show int”）。<BR>&nbsp;&nbsp;&nbsp; 主机B的接口信息如下：</P>
<P align=center><IMG src="../upload/1223258565421_pic.gif"></P>
<P align=center>图19-8&nbsp; 接口信息</P>
<P>&nbsp;&nbsp;&nbsp; 主机D的接口信息如下：</P>
<P align=center><IMG src="../upload/1223258604375_pic.gif"></P>
<P align=center>图19-9&nbsp; 接口信息</P>
<P>&nbsp;&nbsp;&nbsp; 主机E的接口信息如下：</P>
<P align=center><IMG src="../upload/1223258649906_pic.gif"></P>
<P align=center>图19-10&nbsp; 接口信息</P>
<P>&nbsp;&nbsp;&nbsp; 由上面的信息可知三个路由器间的COST，下图为三个路由器带权有向图：</P>
<P align=center><IMG src="../upload/1226058786250_pic.gif"></P>
<P align=center>图19-11&nbsp; 三个路由器带权有向图</P>
<P>4.&nbsp; SPF的计算过程分析-最短路径树计算的过程：<BR>&nbsp;&nbsp;&nbsp; 这里以主机B为根来分析最短路径树的生成过程，由于是最短路径树，所以要求从主机B到网络中任意一点的距离都是最短的，具体计算可以通过对metric值的累加来完成。<BR>&nbsp;&nbsp;&nbsp; 我们把主机B到网络中各点的下一跳和metric值列在下表中，以方便进行最短路径树的计算：</P>
<P align=center>表19-2&nbsp; 跳与metric</P>
<P align=center><IMG src="../upload/1223258724812_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 参照上表中到同一目的地的不同下一跳和OSPF metric值，可以得出从主机B到网络中各点的最短路径，下图所示的是以主机B为根的最短路径树。</P>
<P align=center><IMG src="../upload/1224117708703_pic.gif"></P>
<P align=center>图19-12&nbsp; 根的最短路径树</P>
<P>&nbsp;&nbsp;&nbsp; 在主机B上，用tracert命令来验证最短路径树的形状。<BR>&nbsp;&nbsp;&nbsp; 在命令行方式下，输入命令“tracert 172.16.1.2”。<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 由上述命令的显示结果说明主机B到主机D的路径。<BR>5.&nbsp; 参照步骤4的过程，分别绘制以主机D和主机E为根的最短路径树。<BR>6.&nbsp; 改变主机B和主机D间、主机D和主机E间接口的OSPF路由的COST值，重新计算SPF，加深对SPF算法的理解。<BR>&nbsp;&nbsp;&nbsp; （1）参照实验步骤1中设置接口权值的方法，将主机B和主机D间接口的OSPF路由的COST值设置为200，将主机D和主机E间接口的OSPF路由的COST值设置为500。<BR>&nbsp;&nbsp;&nbsp; （2）参照步骤4的过程，分别绘制以主机B、主机D和主机E为根的最短路径树。使用tracert命令来验证各路由器（主机B、D、E）最短路径树的形状。<BR>7.&nbsp; 结合步骤3―步骤6的实验结果，说明OSPF协议在区域内部SPF（最短路径树）的具体计算过程。<BR>8.&nbsp; 分别在主机B、D、E命令行下输入“recover_config”命令，停止OSPF协议。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 