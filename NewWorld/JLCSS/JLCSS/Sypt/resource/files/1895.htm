<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">一. 支持IPv6的套接字的变化<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 增加的常量<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 地址的数据结构<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 核心套接字函数</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>一. 支持IPv6的套接字的变化</STRONG><BR><STRONG>1.&nbsp; 增加的常量</STRONG><BR>&nbsp;&nbsp;&nbsp; IPv6的地址族名和协议族名常量为：<BR>&nbsp;&nbsp;&nbsp; AF_INET6<BR>&nbsp;&nbsp;&nbsp; PF_INET6<BR><STRONG>2.&nbsp; 地址的数据结构</STRONG><BR>&nbsp;&nbsp;&nbsp; In6_addr&nbsp; IPv6的地址结构<BR>&nbsp;&nbsp;&nbsp; typedef struct in6_addr {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; union {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_char Byte[16];<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_short Word[8];<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } u;<BR>&nbsp;&nbsp;&nbsp; } in6_addr;<BR>&nbsp;&nbsp;&nbsp; sockaddr_in6&nbsp; IPv6套接字的地址结构<BR>&nbsp;&nbsp;&nbsp; struct sockaddr_in6 {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short sin6_family;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_short sin6_port;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_long sin6_flowinfo;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct in6_addr sin6_addr;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_long sin6_scope_id;<BR>&nbsp;&nbsp;&nbsp; };<BR><STRONG>3.&nbsp; 核心套接字函数</STRONG><BR>&nbsp;&nbsp;&nbsp; 未发生变化的函数功能如下表所示：</P>
<P align=center>表12-1&nbsp; 未发生变化的函数功能</P>
<P align=center><IMG src="../upload/1228095492500_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp;发生变化的函数对比及功能说明如下表所示：</P>
<P align=center>表12-2&nbsp; 发生变化的函数</P>
<P align=center><IMG src="../upload/1228095526031_pic.gif"></P>
<P>&nbsp;&nbsp;&nbsp; 由于Windows XP的IPv6协议中不支持inet_pton()和inet_ntop()函数。因此，可使用getaddrinfo()和getnameinfo()这两个函数完成相应功能。函数定义如下：<BR>&nbsp;&nbsp;&nbsp; int getaddrinfo(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const char* nodename,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const char* servname,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const struct addrinfo* hints,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct addrinfo** res<BR>&nbsp;&nbsp;&nbsp; );</P>
<P>&nbsp;&nbsp;&nbsp; int getnameinfo(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const struct sockaddr* sa,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socklen_t salen,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char* host,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DWORD hostlen,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char* serv,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DWORD servlen,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int flags<BR>&nbsp;&nbsp;&nbsp; );</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 