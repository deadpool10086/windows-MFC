<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">三. 距离向量路由<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 初始化<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 共享<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp; 更新<BR>&nbsp;&nbsp;&nbsp; 4.&nbsp; 什么时候共享</td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P><STRONG>三. 距离向量路由</STRONG><BR>&nbsp;&nbsp;&nbsp; 距离向量路由选择协议得到的路由是任何两个节点之间代价最小的路由。在协议中，每一个节点维护一个到其它节点的最小距离向量表。在这个表中还指出路径的下一跳地址，以便把数据包发送到目的节点。<BR>&nbsp;&nbsp;&nbsp; 下图给出了一个具有5个节点的网络，以及这些节点维护的最小距离向量表。<BR>&nbsp;&nbsp;&nbsp; 节点A的路由表指出怎样能够从这个节点到达其它节点。例如，到节点E的最小代价是6，这条路由经过节点C。</P>
<P align=center><IMG src="../upload/1236827807562_pic.gif"></P>
<P align=center>图17-2&nbsp; 距离向量路由表</P>
<P><STRONG>1.&nbsp; 初始化</STRONG><BR>&nbsp;&nbsp;&nbsp; 在图17-2中的表是稳定的，每一个节点都知道如何到达其它节点，以及到达其它节点的代价。但是最初的情况并不是这样的，在初始状态下，每一个节点只知道到与它直接相连的节点的代价（假定每一个节点能够向其相邻节点发送一个报文，并且找出从它到这些邻节点的代价）。下图给出了每一个节点的最初的表。对于到不相邻节点的代价则标记为无穷大（不可达）。</P>
<P align=center><IMG src="../upload/1236827815625_pic.gif"></P>
<P align=center>图17-3&nbsp; 在距离向量路由选择中的表的初始化</P>
<P><STRONG>2.&nbsp; 共享</STRONG><BR>&nbsp;&nbsp;&nbsp; 距离向量路由选择总体的思想就是在相邻节点之间共享路由信息。节点A不知道有关节点E的路由信息，但是节点C知道。如果节点C把它的路由信息与节点A共享，那么节点A也就会知道怎样到达节点E。另一方面，节点C不知道怎样到达节点D，但是节点A知道。如果节点A把它的路由信息与节点C共享，那么节点C也就会知道怎样到达节点D。这就是路由信息的共享，作为相邻节点的节点A和节点C，如果它们彼此互助，就可以改进其路由表。<BR><STRONG>3.&nbsp; 更新</STRONG><BR>&nbsp;&nbsp;&nbsp; 当一个节点从邻站收到路由表信息时，它就需要更新其路由表。更新的方法如下图所示：</P>
<P align=center><IMG src="../upload/1239693005140_pic.gif"></P>
<P align=center>图17-4&nbsp; 路由表更新</P>
<P>&nbsp;&nbsp;&nbsp; 在这里，假设收到的路由信息包含两列内容：目的节点和到达目的节点的代价。如下图所示：</P>
<P align=center><IMG src="../upload/1223258993218_pic.gif"></P>
<P align=center>图17-5&nbsp; 只包含两列的路由表</P>
<P>&nbsp;&nbsp;&nbsp; 下图表示节点A在收到从节点C传来的部分路由表后怎样更新它的路由表。</P>
<P align=center><IMG src="../upload/1223258999359_pic.gif"></P>
<P align=center>图17-6&nbsp; 在距离向量路由选择中的更新</P>
<P>&nbsp;&nbsp;&nbsp; 这里应该注意几点。第一，把一个数与无穷大相加，结果还是无穷大。第二，修正的表指出怎样从节点A经过节点C到达节点A。如果节点A需要经过节点C到达它自己，它必须先到节点C再返回，因此代价是4。第三，节点A经过路由表更新后，路由表的最后一项改变了。以前，节点A不知道如何到达节点E（代价是无穷大）；现在它知道到达节点E的代价是6，要经过节点C。<BR>&nbsp;&nbsp;&nbsp; 每一个节点都从其相邻节点接收路由表信息，并用这个信息来更新自己的路由表。在短时间内，如果网络本身没有变化（如链路出了故障），所有节点的路由表就会达到稳定状态，表中的内容保持不变。<BR><STRONG>4.&nbsp; 什么时候共享<BR></STRONG>&nbsp;&nbsp;&nbsp; 一个节点周期性地向其所有相邻节点发送它的路由表信息。这个周期通常为30秒，具体的时间取决于使用的距离向量路由选择协议。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 