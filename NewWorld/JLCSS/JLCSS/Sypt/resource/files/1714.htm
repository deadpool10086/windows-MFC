<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle">十一.&nbsp;RIPng工作原理<BR>&nbsp;&nbsp;&nbsp; 1.&nbsp; 初始化<BR>&nbsp;&nbsp;&nbsp; 2.&nbsp; 接收到请求<BR>&nbsp;&nbsp;&nbsp; 3.&nbsp;&nbsp;接收到响应<BR>&nbsp;&nbsp;&nbsp; 4.&nbsp; 定期选路更新<BR>&nbsp;&nbsp;&nbsp; 5.&nbsp; 触发更新<BR>&nbsp;&nbsp;&nbsp; 6.&nbsp; 定期计时器<BR>&nbsp;&nbsp;&nbsp; 7.&nbsp; 截止期计时器<BR>&nbsp;&nbsp;&nbsp; 8.&nbsp; 无用信息收集计时器<BR></td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><STRONG>十一.&nbsp;RIP工作原理<BR></STRONG><STRONG>1.&nbsp;初始化</STRONG><BR>&nbsp;&nbsp;&nbsp; 在启动一个路由守护程序时，它先判断启动了哪些接口，并在每个接口上发送一个请求报文，要求其它路由器发送完整路由表。在点对点链路中，该请求是发送给其它终点的。如果网络支持广播的话，这种请求是以广播形式发送的。目的UDP端口号是520。这种请求报文的命令字段为1，但地址系列字段设置为0，而度量字段设置为16。这是一种要求另一端完整路由表的特殊请求报文。<BR><STRONG>2.&nbsp;接收到请求</STRONG><BR>&nbsp;&nbsp;&nbsp; 如果这个请求是刚才提到的特殊请求，那么路由器就将完整的路由表发送给请求者。否则，就处理请求中的每一个表项：如果有连接到指明地址的路由，则将度量设置成我们的值，否则将度量置为16（一种称为“无穷大”的特殊值），然后发回响应。<BR><STRONG>3.&nbsp;接收到响应</STRONG><BR>&nbsp;&nbsp;&nbsp; 使响应生效，可能会更新路由表。可能会增加新表项，对已有的表项进行修改，或是将已有表项删除。&nbsp;<BR><STRONG>4.&nbsp;定期选路更新</STRONG><BR>&nbsp;&nbsp;&nbsp; 每过30秒，所有或部分路由器会将其完整路由表发送给相邻路由器。发送路由表可以是广播形式的（如在以太网上），或是发送给点对点链路的其它终点的。<BR><STRONG>5.&nbsp;触发更新</STRONG><BR>&nbsp;&nbsp;&nbsp; 每当一条路由的度量发生变化时，就对它进行更新。不需要发送完整路由表，而只需要发送那些发生变化的表项。每条路由都有与之相关的定时器。如果运行RIP的系统发现一条路由在180秒内未更新，就将该路由的度量设置成无穷大（16），并标注为删除。这意味着已经在6个30秒更新时间里没收到通告该路由的路由器的更新了。再过60秒，将从本地路由表中删除该路由，以保证该路由的失效已被传播开。<BR>在RIP运行过程中，有三个非常重要的计时器：定期计时器、截止期计时器和无用信息收集计时器。<BR><STRONG>6.&nbsp;定期计时器<BR></STRONG>&nbsp;&nbsp;&nbsp; 定期计时器控制更新报文的定期通告。虽然协议指明了这个计时器必须设置为30秒，但工作模型是使用在25到35之间的一个随机数。这是为了避免出现任何可能的同步，因而可防止在互联网上由于路由器都同时更新而引起的过载。<BR>每一个路由器有定期计时器，设置为25到35之间的一个随机数。它向下计数；当到达零时就发送更新报文，然后把计时器再随机的进行设置一次。<BR>若RIP使用另外的计时方法来发送更新报文，则定期计时器不受其影响。定期更新报文仍按其时间表发送出，而不管从其它计时系统发出的其它更新报文。<BR><STRONG>7.&nbsp;截止期计时器</STRONG><BR>&nbsp;&nbsp;&nbsp; 截止期计时器管理路由的有效性。当路由器收到路由的更新信息时，截止期计时器就对这个特定路由设置到180秒。每当收到这个路由新的更新时，截止期计时器就要复位。在正常情况下，每隔30秒发生一次复位。但是，若在互联网中出现了问题，并且在分配的180秒内没有收到更新报文，那么这个路由就被认为是过期了，而路由的跳数就设置为16，这表示目的端不可达。每一条路由有它自己的截止期。<BR><STRONG>8.&nbsp;无用信息收集计时器</STRONG><BR>&nbsp;&nbsp;&nbsp; 如果有关某一条路由的信息成为无效的，那么路由器并不立即在路由表中清除这条路由。相反，路由器继续通告这个路由的量度为16。与此同时，一个叫做无用信息收集计时器的计数器就对该路由设置为120秒。当计数下降到零时，这个路由器就从路由表中清除掉。这个计时器使得邻站知道某个路由是无效的，而在后来才将其清除。</td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 