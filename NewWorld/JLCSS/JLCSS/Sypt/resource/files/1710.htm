<html> <head> <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> <title></title> <link href="inc/style.css" rel="stylesheet" type="text/css"> </head>  <body class=infobody> <table width="100%" height="100%" cellspacing="0">  <tr>  <td valign="top"> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>内容摘要</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><P>七.&nbsp;RIPng协议简介<BR>八.&nbsp;RIPng报文格式<BR>九.&nbsp;OSPFv3协议简介<BR>十.&nbsp;OSPFv3报文格式</P>
<P>&nbsp;</P></td>             </tr>           </table> <table>   <tr>   <td height=25></td>   </tr>           <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" style="border-bottom:#1873b5 solid 1px">             <tr><td style="background-image:url(images/cinfo_left.GIF);display:" width="5"></td>               <td width="86" height="28" style="padding-left:4px;padding-right:4px;background-image:url(images/cinfo_center.GIF);color:#3081bd;text-align:center;padding-bottom:0px;padding-top:4px;display:"><nobr>相关内容</nobr></td> <td style="background-image:url(images/cinfo_right.GIF);display:" width="5"></td>               <td>&nbsp;</td>             </tr>           </table>           <table width="100%" border="0" align="center" cellpadding="5" cellspacing="1" bgcolor="#FFFFFF" style="border:#1873b5 solid 1px;border-top:0px">             <tr>               <td bgcolor="#F5FAFA" style="padding-left:20;padding-right:20px" id="ptitle"><STRONG>七.&nbsp;RIPng协议简介</STRONG><BR>&nbsp;&nbsp;&nbsp; RIPng（RIP下一代协议）是IPv6中基于距离向量的路由协议。IPv6中的RIPng协议用于在网络中公告IPv6的网络前缀，是对RIPv2协议的修正。IPv6的RIPng具有简单的数据包结构，它使用UDP端口521来周期性地公告它的路由，响应路由请求，并异步地公告路由的改变。<BR>&nbsp;&nbsp;&nbsp; IPv6的RIPng协议规定的最大距离是15，这里的15是累计的开销（跳数）。距离大于或等于16的节点被认为是不可达的。IPv6的RIPng协议是一个简单的路由协议，它具有周期性地路由公告机制，这种机制专门用于小型或中型的IPv6网络。IPv6的RIPng协议不适用于大型或超大型的IPv6网络。<BR><STRONG>八.&nbsp;RIPng报文格式</STRONG><BR>&nbsp;&nbsp;&nbsp; RIPng是基于UDP的协议，并且使用端口号521发送和接收数据包。RIPng报文大致可分为两类：选路信息报文和用于请求信息的报文。它们都使用相同的格式，由固定的首部和RTE（路由表项）组成，其中RTE可以有多个。RIPng报文的格式如图6-12所示： 
<P align=center><IMG src="../upload/1223272819093_pic.gif"></P>
<P align=center>图6-12&nbsp; RIPng报文格式</P>
<P>&nbsp;&nbsp;&nbsp; RIPng报文格式中各个字段的格式如下：<BR>&nbsp;&nbsp;&nbsp; 命令：用来区分报文要实现的各种操作。1表示请求部分或全部选路信息；2表示响应。<BR>&nbsp;&nbsp;&nbsp; 版本：版本号字段包含了协议的版本号（目前的版本号值为1）。<BR>&nbsp;&nbsp;&nbsp; 路由表项：路由表项字段是一个RTE序列，其中每一个RTE由目的IPv6前缀，路由标记，前缀的有效长度以及到目的网络的花费等四个部分组成。RTE的结构如图6-13所示：</P>
<P align=center><IMG src="../upload/1223272826234_pic.gif"></P>
<P align=center>图6-13&nbsp; RTE的结构</P>
<P>&nbsp;&nbsp;&nbsp; RTE的结构中各个字段的含义如下：<BR>&nbsp;&nbsp;&nbsp; IPv6前缀：IPv6的地址为128位，因此在RTE中占16个字节。<BR>&nbsp;&nbsp;&nbsp; 路由标记：路由标记字段是从RIP中保留下来的，其最主要的用途是用来对外部路由进行标记以区分内部路由和外部路由，供外部网关路由协议（如EGP或BGP）使用。<BR>&nbsp;&nbsp;&nbsp; 前缀长度：前缀长度字段指明了前缀中有效位的长度。<BR>&nbsp;&nbsp;&nbsp; 路由花费：路由花费字段是指到目的网络的花费。由于RIPng的最大工作直径为15跳，因此该字段可以为1～15之间的任意值，16即意味着目的地不可达。<BR>&nbsp;&nbsp;&nbsp; 与RIP不同的是RIPng的下一跳字段是由一个单独的RTE指定的。在表示下一跳的RTE中，路由标记和前缀长度字段必须为0，而路由花费字段为0xFF。<BR><STRONG>九.&nbsp;OSPFv3协议简介<BR></STRONG>&nbsp;&nbsp;&nbsp; IPv6的OSPFv3协议是基于链路状态的路由协议。它被设计为一个运行在单个自治系统上的路由协议。IPv6的OSPFv3协议是对IPv4的OSPFv2的修订。每个路由器链路的OSPF协议的开销是由网络管理员设定的一个无单位数，它包括延时，带宽和货币成本因素。在OSPF网络中，网段之间的累计开销必须小于65535。OSPF报文被用作上层协议PDU，其下一个报头的值为89。<BR>&nbsp;&nbsp;&nbsp; IPv6的OSPF对OSPFv2进行了以下的改进：<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 修改了OSPFv2数据包的结构，去掉了依赖于IPv4编址的部分；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 定义了用于携带IPv6地址和前缀的新的LSA；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; OSPF协议在每条链路上，而不是在每个子网上运行；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; 扩大了LSA洪泛的网络范围；<BR>&nbsp;&nbsp;&nbsp; ●&nbsp; OSPF协议不再提供身份验证。它要依赖IPv6扩展报头中的身份验证报头（AH）和封装安全载荷（ESP）报头和尾部。<BR><STRONG>十.&nbsp;OSPFv3报文格式</STRONG><BR>&nbsp;&nbsp;&nbsp; （1）OSPFv3的报文格式<BR>&nbsp;&nbsp;&nbsp; OSPF数据包共有5种报文类型，它们都以标准的16字节报头开始，所有类型的报文（除了“Hello”报文）都处理LSA（链路状态公告）列表，例如链路状态更新报文在OSPF路由域内执行LSA的洪泛。<BR>&nbsp;&nbsp;&nbsp; OSPF报文格式如图6-14所示：</P>
<P align=center><IMG src="../upload/1223272834406_pic.gif"></P>
<P align=center>图6-14&nbsp; OSPFv3报文格式</P>
<P>&nbsp;&nbsp;&nbsp; OSPF报文格式中各个字段的含义如下：<BR>&nbsp;&nbsp;&nbsp; 版本：表示OSPF协议版本号。<BR>&nbsp;&nbsp;&nbsp; 类型：OSPF数据包有以下几种类型：<BR>&nbsp;&nbsp;&nbsp; 1代表“Hello”；<BR>&nbsp;&nbsp;&nbsp; 2代表数据库描述；<BR>&nbsp;&nbsp;&nbsp; 3代表链路状态请求；<BR>&nbsp;&nbsp;&nbsp; 4代表链路状态更新；<BR>&nbsp;&nbsp;&nbsp; 5代表链路状态确认。<BR>&nbsp;&nbsp;&nbsp; OSPF包长度：用字节表示，长度包括标准的OSPF报文头。<BR>&nbsp;&nbsp;&nbsp; 路由器ID：数据包的源路由器ID。<BR>&nbsp;&nbsp;&nbsp; 域ID：32位的数字，用来标识当前数据包所属的域。所有的OSPF数据包都和一个域相关，大多数数据包只发送一跳；在虚链路上传送的数据包的域ID为0。<BR>&nbsp;&nbsp;&nbsp; 校验和：OSPF使用标准的校验和方法。伪首部的上层数据包长度字段设置为OSPF数据包长度字段值，伪首部的下一个字段值是89。<BR>&nbsp;&nbsp;&nbsp; 实例ID：使OSPF的多个实例能在单个链路上运行。每个协议实例会被分配一个单独的实例ID；实例ID仅具有本地链路意义。<BR>&nbsp;&nbsp;&nbsp; （2）OSPF报文的五种类型<BR>&nbsp;&nbsp;&nbsp; ① 问候（Hello）报文<BR>&nbsp;&nbsp;&nbsp; 建立和保持邻居关系。报文格式如6-15所示：</P>
<P align=center><IMG src="../upload/1223272843093_pic.gif"></P>
<P align=center>图6-15&nbsp; 问候报文格式</P>
<P>&nbsp;&nbsp;&nbsp; 问候报文格式中的各个字段格式如下：<BR>&nbsp;&nbsp;&nbsp; 路由器优先级：用于（备份）指定路由器选举。如设置为0，表示路由器成为（备份）指定路由器是不合法的。<BR>&nbsp;&nbsp;&nbsp; 选项：路由器支持的可选功能。<BR>&nbsp;&nbsp;&nbsp; Hello间隔：路由器发送Hello报文相隔的秒数。<BR>&nbsp;&nbsp;&nbsp; 路由器死亡间隔：路由器失效之前的秒数。<BR>&nbsp;&nbsp;&nbsp; 指定路由器ID：网路中指定路由器的标识。指定路由器由它的路由器ID标识，在没有指定路由器的情况下设为0.0.0.0。<BR>&nbsp;&nbsp;&nbsp; 备份指定路由器ID：网络中备份指定路由器的标识。备份指定路由器由它的路由器ID标识，在没有备份指定路由器的情况下设为0.0.0.0。<BR>&nbsp;&nbsp;&nbsp; 邻居列表：包括一个或多个邻居ID，邻居ID是网络上最近有效的“Hello”报文中的所有路由器的ID号。“最近”指在上一个路由器死亡间隔内。<BR>&nbsp;&nbsp;&nbsp; ② 数据库描述（Database Description）报文<BR>&nbsp;&nbsp;&nbsp; 它们描述了链路状态数据库的内容。报文格式如图6-16所示：</P>
<P align=center><IMG src="../upload/1223272850265_pic.gif"></P>
<P align=center>图6-16&nbsp; 数据描述报文格式</P>
<P>&nbsp;&nbsp;&nbsp; 数据描述报文格式中的各个字段含义如下：<BR>&nbsp;&nbsp;&nbsp; 选项：路由器支持的可选功能。<BR>&nbsp;&nbsp;&nbsp; 接口MTU：表示发送到相关接口上不分片的IPv6数据包的最大字节长度。在虚链路上发送数据库描述报文时，“接口MTU”应置为0。<BR>&nbsp;&nbsp;&nbsp; 数据库描述选项：该字段中前5位都为0，后三位携带DD（数据库描述）报文的一些信息，分别为I位，M位和MS位。I（初始）位：为1时表示此数据包是数据库描述报文序列中的第一个报文；M（后续）位：为1时表示随后有更多的数据库描述报文；MS（主/从）位：为1时表示路由器在数据库交换处理中为主路由器，否则为从路由器。<BR>DD序列号：用来为收集到的数据库描述报文排序。初始值（由Init位设置）应为1，之后逐渐递增直到全部发完数据库描述。<BR>&nbsp;&nbsp;&nbsp; 链路状态头列表：该列表中惟一标识LSA和LSA当前实例的所有信息。<BR>&nbsp;&nbsp;&nbsp; ③ 链路状态请求（Link State Request）报文<BR>&nbsp;&nbsp;&nbsp; 在与邻居路由器交换了数据库描述报文后，本地路由器会发现自身的链路状态数据库已过期。用来向相邻路由器请求数据库中的更新部分时会需要使用多个链路状态请求报文。<BR>&nbsp;&nbsp;&nbsp; 链路状态请求报文格式如图6-17所示：</P>
<P align=center><IMG src="../upload/1223272857718_pic.gif"></P>
<P align=center>图6-17&nbsp; 链路状态请求报文格式</P>
<P>&nbsp;&nbsp;&nbsp; 每个请求的LSA由链路状态类型、链路状态ID和通告路由器来规定，这可惟一识别LSA，但不是它的实例。每个实例根据它的链路状态序列号、链路状态参数和链路状态老化时间来定义，在链路状态请求报文中没有指定这些字段，路由器会收到很多新近实例的响应。链路状态请求报文用于请求最近的实例。<BR>&nbsp;&nbsp;&nbsp; ④ 链路状态更新（Link State Update）报文<BR>&nbsp;&nbsp;&nbsp; 链路状态更新报文用于执行LSA洪泛。每个链路状态更新报文携带了来自源的LSA集合，在单个数据包里包含几个LSA。<BR>&nbsp;&nbsp;&nbsp; 链路状态更新报文格式如图6-18所示：</P>
<P align=center><IMG src="../upload/1223272864687_pic.gif"></P>
<P align=center>图6-18&nbsp; 链路状态更新报文格式</P>
<P>&nbsp;&nbsp;&nbsp; ＃LSA：需要更新的LSA数。<BR>&nbsp;&nbsp;&nbsp; LSA：链路状态更新报文包含LSA的列表，每个LSA起始报文头都是一个通用的20字节。<BR>&nbsp;&nbsp;&nbsp; ⑤ 链路状态确认（Link State Acknowledgment）报文<BR>&nbsp;&nbsp;&nbsp; 为了得到可靠的LSA洪泛，洪泛的LSA需要显示确认。通过发送和接收链路状态确认报文来完成确认过程。<BR>&nbsp;&nbsp;&nbsp; 链路状态确认报文格式如图6-19所示：</P>
<P align=center><IMG src="../upload/1223272872984_pic.gif"></P>
<P align=center>图6-19&nbsp; 链路状态确认报文格式</P>
<P>&nbsp;&nbsp;&nbsp; 这种报文的格式类似于数据库描述报文。两种报文的主体都是简单的LSA头列表。为了得到可靠的LSA洪泛，洪泛的LSA需要通过显示确认。通过发送和接收链路确认报文来完成确认过程。单个链路状态确认报文可以确认多个LSA。根据相应链路状态更新报文的发送接口和发送者的状态，链路状态确认报文被发送到组播地址“ALLSPFRouters”（FF02：：5，所有运行OSPF的路由器应该接收送到这个地址的数据包）、“ALLDRouters”（FF02：：6，指定路由器和备份指定路由器必须接收送到这个地址的数据包），或作为单播传送。</P></td>             </tr>           </table>  </td> </tr> </table> </body> </html> <script> if(window.HTMLElement) {     HTMLElement.prototype.__defineSetter__("outerHTML",function(sHTML){         var r=this.ownerDocument.createRange();         r.setStartBefore(this);         var df=r.createContextualFragment(sHTML);         this.parentNode.replaceChild(df,this);         return sHTML;         });      HTMLElement.prototype.__defineGetter__("outerHTML",function(){      var attr;         var attrs=this.attributes;         var str="<"+this.tagName.toLowerCase();         for(var i=0;i<attrs.length;i++){             attr=attrs[i];             if(attr.specified)                 str+=" "+attr.name+'="'+attr.value+'"';             }         if(!this.canHaveChildren)             return str+">";         return str+">"+this.innerHTML+"</"+this.tagName.toLowerCase()+">";         });           HTMLElement.prototype.__defineGetter__("canHaveChildren",function(){   switch(this.tagName.toLowerCase()){             case "area":             case "base":          case "basefont":             case "col":             case "frame":             case "hr":             case "img":             case "br":             case "input":             case "isindex":             case "link":             case "meta":             case "param":             return false;         }         return true;       }); }  function showMe(i) {  	objHtml=document.all["s"+i].innerHTML; 	date=new Date(); 	if(navigator.userAgent.indexOf("MSIE")>0) 		window.status="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	else 		top.document.title="cmdOpen,"+date.getTime()+","+(objHtml.substring(objHtml.lastIndexOf("\"",objHtml.indexOf(".swf\""))+1,objHtml.indexOf(".swf\"")+4)); 	}  	if(navigator.userAgent.indexOf("MSIE")>0) 	var objects=document.all.tags("OBJECT"); 	else 	var objects=document.getElementsByTagName("OBJECT"); 	for(i=0;i<objects.length;i++) { objects[i].style.width="100%"; objects[i].outerHTML="<a href=# onclick=\"showMe("+i+")\">动画演示</a><span id=s"+i+" style=\"display:none\">"+objects[i].outerHTML+"</span>"; } var iHtml=document.body.innerHTML;  </script> 